name: Security checks (deps + Dockerfile)

on:
  push:
    branches: [ master ]   # change en main si besoin
  pull_request:
    branches: [ master ]

jobs:
  deps:
    name: Dépendances (requirements.txt)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Scan des dépendances Python avec Trivy (file system)
      - name: Trivy scan on requirements.txt
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/project" \
            -v "$HOME/.cache/trivy:/root/.cache/" \
            aquasec/trivy:latest fs \
              --quiet \
              --severity HIGH,CRITICAL \
              --ignore-unfixed \
              --exit-code 1 \
              --no-progress \
              /project/requirements.txt

  dockerfile:
    name: Dockerfile (lint + image scan)
    runs-on: ubuntu-latest
    needs: deps     # <-- ne démarre que si "deps" est OK
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Lint Dockerfile (bonnes pratiques)
      - name: Hadolint (lint Dockerfile)
        run: |
          docker run --rm -i hadolint/hadolint < Dockerfile

      # Build de l'image (tag éphémère sur le SHA)
      - name: Docker build
        run: docker build -t app:${{ github.sha }} .

      # Scan de l'image docker (fail si HIGH/CRITICAL)
      - name: Trivy image scan
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$HOME/.cache/trivy:/root/.cache/" \
            aquasec/trivy:latest image \
              --quiet \
              --severity HIGH,CRITICAL \
              --ignore-unfixed \
              --exit-code 1 \
              --no-progress \
              app:${{ github.sha }}
